name: Docker Build and Push

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use Ubuntu to run the workflow

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Checkout your repository's code

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1  # Set up Docker buildx for advanced builds

    - name: Cache Docker layers
      uses: actions/cache@v3  # Updated to v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: |
        docker build -t gocho123/my-flask-app:${{ github.sha }} .

    - name: Get the latest version tag
      id: get_version
      run: |
        # Get the latest tag (using `v1.*.*` as an example, adjust as needed)
        latest_tag=$(curl -s https://registry.hub.docker.com/v2/repositories/gocho123/my-flask-app/tags | jq -r '.results | map(.name) | sort | .[-1]')
        echo "Latest tag is: $latest_tag"
        
        # Parse version number and increment
        if [[ $latest_tag == "latest" || -z "$latest_tag" ]]; then
          new_version="v1.0.0"
        else
          # Increment the patch version for the new tag
          IFS='.' read -r -a version_parts <<< "$latest_tag"
          patch=${version_parts[2]}
          patch=$((patch+1))
          new_version="${version_parts[0]}.${version_parts[1]}.$patch"
        fi
        
        # Output the new version tag
        echo "New version tag is: $new_version"
        echo "::set-output name=version::$new_version"

    - name: Log in to Docker Hub
      uses: docker/login-action@v2  # Login to Docker Hub
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username stored in GitHub Secrets
        password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password (personal access token) stored in GitHub Secrets

    - name: Tag the image with the new version and latest
      run: |
        docker tag gocho123/my-flask-app:${{ github.sha }} gocho123/my-flask-app:${{ steps.get_version.outputs.version }}
        docker tag gocho123/my-flask-app:${{ github.sha }} gocho123/my-flask-app:latest  # Always update 'latest'

    - name: Push Docker image to Docker Hub
      run: |
        docker push gocho123/my-flask-app:${{ steps.get_version.outputs.version }}  # Push the versioned image
        docker push gocho123/my-flask-app:latest  # Push the latest tag to always update it
